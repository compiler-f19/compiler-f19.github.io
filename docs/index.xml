<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docs on Introduction to Compiler Design</title>
    <link>https://compiler-f19.github.io/docs/</link>
    <description>Recent content in Docs on Introduction to Compiler Design</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Jun 2019 23:30:31 +0800</lastBuildDate>
    
	<atom:link href="https://compiler-f19.github.io/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>General information</title>
      <link>https://compiler-f19.github.io/docs/syllabus/</link>
      <pubDate>Mon, 17 Jun 2019 23:30:31 +0800</pubDate>
      
      <guid>https://compiler-f19.github.io/docs/syllabus/</guid>
      <description>Overview This course is intended to explore the principal ideas and techniques of compiler construction. Topics include lexical analysis, syntax analysis including LL and LR parsers, type checking, run-time environments, symbol tables, code generation, and compiler-construction tools.
This course aims to give you a solid foundation in the theory of compiler construction as well as the experience of building a compiler. Much of what you have learned about algorithms and data structures will come to bear as you study and implement the various components of a compiler.</description>
    </item>
    
    <item>
      <title>Schedule</title>
      <link>https://compiler-f19.github.io/docs/schedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://compiler-f19.github.io/docs/schedule/</guid>
      <description>  期末加油 🔥🔥
 Week by week schedule    Week Lecture Note     1 Course Introduction &amp;amp; Overview Lec0  / Lec1    2 Lexical Analysis I Lec2    3 Lexical Analysis II / Lex - The Lexical-Analyzer Generator Lec3  / Lec4    4 Syntax Analysis: Context-Free Grammar Lec5    5 Syntax Analysis: Top-Down and Buttom-Up Parsing Lec6    6 Syntax Analysis: Top-Down and Buttom-Up Parsing    7 Syntax Analysis: More LR Parsing / Yacc - The Parser Generator Lec7  / Lec8    8 Syntax-Directed Translation Lec9    9 Midterm Exam (11&amp;frasl;6)    10 Syntax-Directed Translation    11 Intermediate-Code Generation Lec10    12 Intermediate-Code Generation    13 Intermediate-Code Generation / Run-Time Environment Lec11    14 Run-Time Environment    15 Code Generation Lec12    16 Control-Flow Analysis and Optimizations Lec13    17 Final Exam (1&amp;frasl;3)     </description>
    </item>
    
    <item>
      <title></title>
      <link>https://compiler-f19.github.io/docs/guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://compiler-f19.github.io/docs/guide/</guid>
      <description>課程導覽  介紹 組織導覽 加入流程  介紹 我們在這學期做了一個新嘗試，將作業的撰寫、繳交與 Git 結合，並將課程網站放上 GitHub ，目的是提高各位的修課體驗，並嘗試與現今資訊世界接軌。
 如果有什麼問題，請各位不要害怕到 討論區 發問。你是修課生，你有的問題其他學生也一定會有，幫助你自己的同時也是在幫助其他同學，同時還能讓教授知道課程有什麼問題需要調整。
 這學期將課成內容交由 GitHub 代管，作業使用 Git 繳交能帶來許多好處，以下列出幾點讓大家能稍微理解理解。
1. GitHub 網站的穩定性比 E3 高 身為交大的學生可能體驗過在作業死線來臨前 1 分鐘繳交作業，e3 直接直接死掉不回應，或是在期末考週學校 E3 伺服器壞掉各位無法瀏覽的慘況。把課程的網站跟作業繳交 托管到 GitHub 這類擁有多主機的跨國公司能大幅提升網站穩定性，讓大家能隨時瀏覽相關內容。同時，我們也可以利用 GitHub 提供的 伺服器紀錄 判斷是否有因為伺服器下線讓作業無法繳交的情況，斟酌延後作業死線。
2. GitHub 當作你的遠端備份 你只需要一個指令就能將程式碼放上 GitHub，讓你能很簡單的備份自己的作業，降低誤刪自己作業檔案的風險。
3. 強迫各位使用版本控管 或許各位上大學唸資工從來沒聽過版本控管，或只是單純沒機會使用。沒關係，這堂課會讓你透過使用最低限度的 Git 來練習版本控管。甚至運用 Git 輔助自己未來的專案開發流程。 可能一開始用 Git 會有些不方便，甚至看起來有點多餘。但你既然都已經繳學費來學習，不妨多花點心力學會一些可以輔助你工作的工具吧！
組織導覽 我們把這個課程中所有內容都放在一個Github組織下: compiler-f19，而這個組織中會包含兩個所有修課生會使用到的 Repo (Repository)。
+ compiler-f19 —— 課程開的 GitHub Organization + Discussion —— 討論版 + Compiler-f19-private —— 修課生的專屬內容  Compiler-f19-private 是於修課生才能擁有的內容，比如：每次作業的邀請代碼、考古題連結、整理好的某些筆記內容（助教如果還有時間會做喇&amp;hellip;）、考試的答案解析。同學必須要申請加入組織才有權限瀏覽。</description>
    </item>
    
    <item>
      <title>calendar</title>
      <link>https://compiler-f19.github.io/docs/calendar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://compiler-f19.github.io/docs/calendar/</guid>
      <description>Simple tutorial to calendar integration Integration with Google Calendar is a neccessary step toward better course experience. So we did that for you, too.
In order to keep this calendar effective. Simpilicity and Efficiency would be our two priorities. Therefore, We would only schedule important things (e.g. deadlines and midterms ) into this calendar and make them concise.
Subscribe our course schedule in Google Calendar now.
Subscribe to our Google Calendar Click the button +Google Calendarin the bottom-right corner.</description>
    </item>
    
  </channel>
</rss>